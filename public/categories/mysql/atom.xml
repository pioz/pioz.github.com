<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categoria: mysql | programmer@work]]></title>
  <link href="http://blog.pioz.it/categories/mysql/atom.xml" rel="self"/>
  <link href="http://blog.pioz.it/"/>
  <updated>2016-11-19T04:49:22+01:00</updated>
  <id>http://blog.pioz.it/</id>
  <author>
    <name><![CDATA[Pioz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Configurare un multi domain mail server con Postfix, Dovecot e autenticazione sicura]]></title>
    <link href="http://blog.pioz.it/configurare-multi-domain-mail-server-postfix-dovecot"/>
    <updated>2009-12-11T10:22:00+01:00</updated>
    <id>http://blog.pioz.it/configurare-multi-domain-mail-server-postfix-dovecot</id>
    <content type="html"><![CDATA[<p>Allora in questa guida vedremo come installare e configurare un mail server professionale.
Il tutto è stato testato in una <a href="http://www.debian.org">Debian</a> 5.0 stable.</p>

<p>Con questo server mail sarà possibile gestire più domini e quindi per esempio allo stesso tempo mantenere mail del tipo <em>@pioz.it</em> e <em>@barison.org</em>.
Il tutto avverrà dando la possibilità all'utente se utilizzare comunicazioni criptate (come SSL o TLS) o in chiaro, se utilizzare autenticazione in chiaro (PLAIN) o criptata (CRAM-MD5 o DIGEST-MD5). Dando la possibilità di usare protocollo IMAP o POP3.</p>

<p>Il necessario:</p>

<ul>
<li><strong>Postfix</strong> come server SMTP</li>
<li><strong>Dovecot</strong> come server POP3 e IMAP</li>
<li><strong>MySQL</strong> come database per il salvataggio degli utenti, password e domini</li>
<li><strong>SASL</strong> per criptare il trasferimento dei dati tra server e client</li>
</ul>


<p>Installiamo il necessario:</p>

<pre><code>$ apt-get install postfix postfix-mysql
$ apt-get install dovecot-imapd dovecot-pop3d
$ apt-get install mysql-server-5.0
$ apt-get install libsasl2 sasl2-bin libsasl2-modules
</code></pre>

<h3>Passo 0: domini</h3>

<p>Per capirci meglio usiamo le seguenti convenzioni: il dominio associato al mail server sarà <code>ciccio.com</code>, mentre i domini che hosteremo saranno <code>pippo.it</code> e <code>pluto.com</code>.</p>

<p>Questo significa che tutti e tre i domini dovranno avere un record MX nel DNS chiamato mail.nomedominio che punterà all'IP del nostro server mail.</p>

<p>Inoltre dato che useremo anche SSL per il trasferimento dei dati tra server e client è necessario avere un certificato (valido) per il dominio <code>mail.ciccio.com</code>.</p>

<h2>PASSO 1: configurazione database</h2>

<p>Per prima cosa creiamo un database per contenere gli utenti che potranno usufruire del nostro servizio mail.
Creiamo un file e lo chiamiamo <code>mail.sql</code> e ci incolliamo dentro il seguente codice SQL:</p>

<pre><code>create database mail;

use mail;

CREATE TABLE user (
  domain varchar(255) NOT NULL,
  username varchar(255) NOT NULL,
  password varchar(255) NOT NULL,
  quota int(255) NOT NULL default 0,
  active tinyint(1) NOT NULL default 1,
  admin tinyint(1) NOT NULL default 0,
  PRIMARY KEY (username, domain)
);

CREATE TABLE alias (
  address varchar(255) NOT NULL,
  goto varchar(255) NOT NULL,
  active tinyint(1) NOT NULL default 1,
  PRIMARY KEY (address, goto)
);
</code></pre>

<p>A questo punto eseguiamo il codice SQL e creiamo un utente con privilegi ristretti che verrà usato da postfix e dovecot per connettersi al DB:</p>

<pre><code>$ mysql -u root -p
mysql&gt; source mail.sql;
mysql&gt; GRANT select,insert,update,delete ON mail.* TO 'postfix'@'localhost' IDENTIFIED BY 'password';
mysql&gt; quit;
</code></pre>

<p>Ottimo, ora abbiamo il nostro BD&hellip; 2 tabelle: una per gli utenti e una per gli alias. Gli alias sono delle mail che sono alias di mail &ldquo;reali&rdquo;.</p>

<p>Vediamo, prima di proseguire, i campi della tabella <code>user</code>:</p>

<ul>
<li><strong>domain</strong>: il dominio dell'indirizzo mail (per esempio <a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#111;&#58;&#x6c;&#x75;&#x63;&#97;&#64;&#112;&#x69;&#112;&#112;&#x6f;&#46;&#x69;&#x74;">&#x6c;&#x75;&#99;&#x61;&#64;&#112;&#x69;&#112;&#x70;&#x6f;&#46;&#105;&#x74;</a> ha dominio pippo.it).</li>
<li><strong>username</strong>: lo username per accedere alla casella di posta, nel nostro caso, <strong>IMPORTANTE</strong>, è l'intero indirizzo mail (quindi non luca, ma <a href="&#109;&#97;&#x69;&#108;&#116;&#111;&#x3a;&#x6c;&#117;&#99;&#97;&#x40;&#112;&#105;&#x70;&#112;&#x6f;&#46;&#x69;&#116;">&#108;&#117;&#99;&#x61;&#64;&#112;&#105;&#x70;&#112;&#111;&#x2e;&#105;&#116;</a>). Questo perchè avendo mail con domini diversi dobbiano distinguerle in modo univoco.</li>
<li><strong>password</strong>: la password per accedere alla casella di posta. Vedremo che sarà criptata con AES.</li>
<li><strong>quota</strong>: quota casella di posta.</li>
<li><strong>active</strong>: l'account mail è attivo o disattivo.</li>
<li><strong>admin</strong>: campo utile per verificare, magari da qualche app esterna, se l'utente può creare altri account.</li>
</ul>


<p>I campi della tabella <code>alias</code>:</p>

<ul>
<li><strong>address</strong>: indirizzo mail dell'alias.</li>
<li><strong>goto</strong>: è alias di.</li>
<li><strong>active</strong>: l'alias è attivo o disattivo.</li>
</ul>


<h2>PASSO 2: creazione delle Maildir</h2>

<p>Le nostre caselle di posta saranno sottoforma di maildir e le posizioniamo in <code>/etc/vmail/</code>. Creiamole impostando i relativi permessi:</p>

<pre><code>$ adduser postfix mail
$ adduser dovecot mail
$ mkdir /var/vmail
$ chmod 770 /var/vmail
$ chown mail.mail /var/vmail
</code></pre>

<p>Bene, in pratica la casella di posta per <a href="&#109;&#97;&#x69;&#108;&#x74;&#111;&#58;&#x6c;&#117;&#x63;&#x61;&#64;&#112;&#x69;&#x70;&#112;&#111;&#x2e;&#x69;&#x74;">&#x6c;&#117;&#x63;&#x61;&#64;&#112;&#x69;&#112;&#x70;&#x6f;&#x2e;&#x69;&#x74;</a> sarà in <code>/var/vmail/luca@pippo.it</code>. Essa verrà creata in automatico al primo login.</p>

<h2>PASSO 3: configurazione Dovecot</h2>

<p>Adesso è arrivato il momento di configurare <a href="http://www.dovecot.org/">Dovecot</a>: il server pop e imap.</p>

<p>Dovecot, per i nostri usi consiste in due file di configurazione:</p>

<ul>
<li><code>/etc/dovecot/dovecot.conf</code>: file di configurazione principale.</li>
<li><code>/etc/dovecot/dovecot-sql.conf</code>: file di configurazione per la connessione e recupero dati dal database MySQL.</li>
</ul>


<p>Vediamo il primo:</p>

<pre><code>## Dovecot configuration file

protocols = pop3 pop3s imap imaps
disable_plaintext_auth = no
log_path = /var/log/mail.log
log_timestamp = "%Y-%m-%d %H:%M:%S "

ssl_disable = no
ssl_cert_file = /etc/ssl/mycerts/mail.ciccio.com/cert.crt
ssl_key_file = /etc/ssl/mycerts/mail.ciccio.com/key.key
ssl_ca_file = /etc/ssl/mycerts/mail.ciccio.com/root.crt

mail_location = maildir:/var/vmail/%u/
mail_privileged_group = mail
#first_valid_uid = 150
first_valid_uid = 8

protocol imap {
  mail_plugins = autocreate
  plugin {
    autocreate  = Trash
    autocreate2 = Junk
    autocreate3 = Drafts
    autocreate4 = Sent
    autocreate5 = INBOX

    autosubscribe  = Trash
    autosubscribe2 = Junk
    autosubscribe3 = Drafts
    autosubscribe4 = Sent
    autosubscribe5 = INBOX
  }
}

protocol pop3 {
  pop3_uidl_format = %08Xu%08Xv
}

protocol lda {
  # log_path = /etc/dovecot/sieve.log
  mail_plugins = cmusieve
  postmaster_address = enrico@megiston.it
}

plugin {
  sieve = /etc/dovecot/sieve/default.sieve
}

auth_verbose = no
auth_debug = no
auth_debug_passwords = no
auth default {
  mechanisms = login plain digest-md5 cram-md5
  passdb sql {
    args = /etc/dovecot/dovecot-sql.conf
  }
  userdb sql {
    args = /etc/dovecot/dovecot-sql.conf
  }
  user = root
  socket listen {
    master {
      path = /var/run/dovecot/auth-master
      mode = 0660
      user = dovecot
      group = mail
    }
    client {
      path = /var/spool/postfix/private/auth
      mode = 0660
      user = postfix
      group = mail
    }
  }
}
</code></pre>

<p>Adesso non entriamo nel dettaglio in quanto non ho voglia di star qua a scrivere, comunque due cosette sulle cose principali:</p>

<ul>
<li>La prima riga specifica i protocolli che vogliamo usare. Gli abilitiamo tutti per dare libertà totale ai nostri utenti. Mi raccomando di avere il certificato per il vostro dominio, nell'esempio per <code>mail.ciccio.com</code>.</li>
<li><code>first_valid_uid</code> deve coincidere con uid dell'utente <code>mail</code>, solitamente 8. Per verificare lanciate il comando &ldquo;<code>id mail</code>&rdquo;.</li>
<li>Importante è la riga &ldquo;<code>mechanisms = login plain digest-md5 cram-md5
</code>&rdquo; che specifica i meccanismi di autenticazione. Noi li abilitiamo tutti, sia quelli in chiaro che criptati in modo da permettere anche a client poco sofisticati (ad esempio quelli dei cellulari) di connettersi al nostro server. Mentre per client completi dare la possibilità di usare autenticazione cifrata (ad esempio Mozilla Thunderbird).</li>
<li><code>userdb</code> e <code>passdb</code> vengono recuperati dall'altro file di configurazione.</li>
<li>Infine fondamentale la sezione <code>socket listen</code> che apre una socket per permettere ad altri programmi di usare il sistema di autenticazione di Dovecot, nel nostro caso Postfix.</li>
</ul>


<p>L'altro file di configurazione per il recupero degli utenti e delle password risulta essere una cosa del genere:</p>

<pre><code>driver = mysql
connect = host=127.0.0.1 dbname=mail user=postfix password=password
default_pass_scheme = PLAIN
user_query = SELECT concat('maildir:/var/vmail/', username, '/') as mail, 8 AS uid, 8 AS gid FROM user WHERE username = '%u' AND domain = '%d' AND active = '1'
password_query = SELECT username AS user, AES_DECRYPT(UNHEX(password),'AESKEY') AS password FROM user WHERE username = '%u' AND domain = '%d' AND active = 1
</code></pre>

<p>Commentiamo:</p>

<ul>
<li><code>driver</code> specifica che il database è MySQL.</li>
<li><code>connect</code> info per la connessione al database.</li>
<li><code>default_pass_scheme</code> usiamo PLAIN, infatti se diamo la possibilità di usare meccanismi di autenticazione in chiaro e non in chiaro (es plain e cram-md5) non c'è alternativa, non possiamo salvare la password in modo criptato per meccanismo PLAIN. Comunque niente paura, la password non sarà salvata in chiaro ma criptata con la funzione AES di mysql e trasformata da binario a text con la funzione HEX.</li>
<li><code>user_query</code> è la query per recuperare l'utente. Da notare che uid e gid devono essere lo stesso dell'utente <code>mail</code> (<code>id mail</code>). Questa in realtà deve recuperare il path della maildir dell'utente, per questo c'è il <code>concat</code>.</li>
<li><code>user_password</code> è la query per recuperare le password decriptandole usando una chiave (nell'esempio AESKEY).</li>
</ul>


<p>Bene ora Dovecot è pronto. Riavviamo Dovecot con <code>/etc/init.d/dovecot restart</code></p>

<h2>PASSO 4: configurazione Postfix</h2>

<p>Postfix è il server SMTP. Viene gestito da due file di configurazione principali, più altri per la connessione con il database:</p>

<ol>
<li><code>/etc/postfix/master.cf</code></li>
<li><code>/etc/postfix/main.cf</code></li>
<li><code>/etc/postfix/mysql_virtual_alias_maps.cf</code></li>
<li><code>/etc/postfix/mysql_virtual_domains_maps.cf</code></li>
<li><code>/etc/postfix/mysql_virtual_mailbox_maps.cf</code></li>
</ol>


<p>Il master (1):</p>

<pre><code>#
# Postfix master process configuration file.  For details on the format
# of the file, see the master(5) manual page (command: "man 5 master").
#
# Do not forget to execute "postfix reload" after editing this file.
#
# ==========================================================================
# service type  private unpriv  chroot  wakeup  maxproc command + args
#               (yes)   (yes)   (yes)   (never) (100)
# ==========================================================================
smtp      inet  n       -       n       -       -       smtpd
#submission inet n       -       -       -       -       smtpd
#  -o smtpd_tls_security_level=encrypt
#  -o smtpd_sasl_auth_enable=yes
#  -o smtpd_client_restrictions=permit_sasl_authenticated,reject
#  -o milter_macro_daemon_name=ORIGINATING
# Decommentiamo il seguito per abilitare il wrapper SSL su TLS
smtps     inet  n       -       -       -       -       smtpd
  -o smtpd_tls_wrappermode=yes
  -o smtpd_sasl_auth_enable=yes
  -o smtpd_client_restrictions=permit_sasl_authenticated,reject
#  -o milter_macro_daemon_name=ORIGINATING
#628      inet  n       -       -       -       -       qmqpd
pickup    fifo  n       -       -       60      1       pickup
cleanup   unix  n       -       -       -       0       cleanup
qmgr      fifo  n       -       n       300     1       qmgr
#qmgr     fifo  n       -       -       300     1       oqmgr
tlsmgr    unix  -       -       -       1000?   1       tlsmgr
rewrite   unix  -       -       -       -       -       trivial-rewrite
bounce    unix  -       -       -       -       0       bounce
defer     unix  -       -       -       -       0       bounce
trace     unix  -       -       -       -       0       bounce
verify    unix  -       -       -       -       1       verify
flush     unix  n       -       -       1000?   0       flush
proxymap  unix  -       -       n       -       -       proxymap
proxywrite unix -       -       n       -       1       proxymap
smtp      unix  -       -       -       -       -       smtp
# When relaying mail as backup MX, disable fallback_relay to avoid MX loops
relay     unix  -       -       -       -       -       smtp
        -o smtp_fallback_relay=
#       -o smtp_helo_timeout=5 -o smtp_connect_timeout=5
showq     unix  n       -       -       -       -       showq
error     unix  -       -       -       -       -       error
retry     unix  -       -       -       -       -       error
discard   unix  -       -       -       -       -       discard
local     unix  -       n       n       -       -       local
virtual   unix  -       n       n       -       -       virtual
lmtp      unix  -       -       -       -       -       lmtp
anvil     unix  -       -       -       -       1       anvil
scache    unix  -       -       -       -       1       scache
#
# ====================================================================
# Interfaces to non-Postfix software. Be sure to examine the manual
# pages of the non-Postfix software to find out what options it wants.
#
# Many of the following services use the Postfix pipe(8) delivery
# agent.  See the pipe(8) man page for information about ${recipient}
# and other message envelope options.
# ====================================================================
#
# maildrop. See the Postfix MAILDROP_README file for details.
# Also specify in main.cf: maildrop_destination_recipient_limit=1
#
maildrop  unix  -       n       n       -       -       pipe
  flags=DRhu user=vmail argv=/usr/bin/maildrop -d ${recipient}
#
# See the Postfix UUCP_README file for configuration details.
#
uucp      unix  -       n       n       -       -       pipe
  flags=Fqhu user=uucp argv=uux -r -n -z -a$sender - $nexthop!rmail ($recipient)
#
# Other external delivery methods.
#
ifmail    unix  -       n       n       -       -       pipe
  flags=F user=ftn argv=/usr/lib/ifmail/ifmail -r $nexthop ($recipient)
bsmtp     unix  -       n       n       -       -       pipe
  flags=Fq. user=bsmtp argv=/usr/lib/bsmtp/bsmtp -t$nexthop -f$sender $recipient
scalemail-backend unix  -       n       n       -       2       pipe
  flags=R user=scalemail argv=/usr/lib/scalemail/bin/scalemail-store ${nexthop} ${user} ${extension}
mailman   unix  -       n       n       -       -       pipe
  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py
  ${nexthop} ${user}
dovecot   unix  -       n       n       -       -       pipe
  flags=DRhu user=mail argv=/usr/lib/dovecot/deliver -n -f ${sender} -d ${recipient}
</code></pre>

<p>Non commentiamo, è molto simile a quello di default a parte un paio di modifiche, tra cui l'abilitazione del wrapper SSL su TLS.</p>

<p>Il main.cf (2):</p>

<pre><code># MAIN POSTFIX CONFIGUTARION #

# smtpd_banner = $myhostname ESMTP $mail_name (Debian/GNU)
# biff = no
# append_dot_mydomain = yes
debug_peer_level = 3
myhostname = mail.ciccio.com

virtual_uid_maps = static:8
virtual_gid_maps = static:8
virtual_minimum_uid = 8
virtual_mailbox_base = /var/vmail/
virtual_alias_maps = mysql:/etc/postfix/mysql_virtual_alias_maps.cf
virtual_mailbox_domains = mysql:/etc/postfix/mysql_virtual_domains_maps.cf
virtual_mailbox_maps = mysql:/etc/postfix/mysql_virtual_mailbox_maps.cf
virtual_transport = virtual

# SASL #

smtpd_sasl_auth_enable = yes
smtpd_sasl_local_domain = $myhostname
smtpd_sasl_security_options = noanonymous
smtpd_sasl_auth_header = yes
smtpd_sasl_type = dovecot
smtpd_sasl_path = private/auth
broken_sasl_auth_clients = yes
smtpd_recipient_restrictions =
  permit_sasl_authenticated,
  reject_unauth_destination

# TLS #

smtp_use_tls = yes
smtpd_use_tls = yes
smtpd_tls_key_file = /etc/ssl/mycerts/mail.ciccio.com/key.key
smtpd_tls_cert_file = /etc/ssl/mycerts/mail.ciccio.com/cert.crt
smtpd_tls_CAfile = /etc/ssl/mycerts/mail.ciccio.com/root.crt
smtpd_tls_loglevel = 1
smtpd_tls_received_header = yes
smtpd_tls_session_cache_timeout = 3600s
tls_random_source = dev:/dev/urandom
</code></pre>

<p>Anche qua non commentiamo&hellip; da notare solo che SASL per autenticare usa la socket che gli viene messa a disposizione da Dovecot.</p>

<p>E gli altri tre in ordine per la connessione al BD:</p>

<pre><code># /etc/postfix/mysql_virtual_alias_maps.cf
user = postfix
password = password
hosts = 127.0.0.1
dbname = mail
table = alias
select_field = goto
where_field = address

# /etc/postfix/mysql_virtual_domains_maps.cf
user = postfix
password = password
hosts = 127.0.0.1
dbname = mail
table = user
select_field = domain
where_field = domain

# /etc/postfix/mysql_virtual_mailbox_maps.cf
user = postfix
password = password
hosts = 127.0.0.1
dbname = mail
query = SELECT concat(username,'/') FROM user WHERE username = '%s' AND active = 1
</code></pre>

<p>Ok, per Postfix abbiamo finito. Riavviamolo con <code>/etc/init.d/postfix/restart</code></p>

<h2>PASSO 5: proviamo il tutto</h2>

<p>Inseriamo gli utenti nel nosto DB e poi testiamo il tutto usando Thunderbird.
Per aggiungere un utente usiamo la seguente query:</p>

<pre><code>$ mysql -u postfix -p
$ insert into user(domain,username,password) values("pippo.it", "luca@pippo.it", HEX(AES_ENCRIPT('passwordchevoglio', 'AESKEY')));
$ insert into user(domain,username,password) values("pluto.com", "nicola@pluto.com", HEX(AES_ENCRIPT('passworddd', 'AESKEY')));
</code></pre>

<p>Vediamo per esempio come configurare Thunderbird:
<img src="http://media.tumblr.com/tumblr_kuhdz2ptTT1qa79c0.png" alt="" /></p>

<h3>Alcune note</h3>

<p>Ricordate di installare Spamassasin per Postfix e magari una bella webmail come <a href="http://roundcube.net/">Roundcube</a>.</p>

<p>Se avete dubbi, chiarimenti, o volete approfondire alcune sezioni non fatevi scrupoli a contattarmi al mio indirizzo mail <a href="mailto:pioz@pioz.it">pioz@pioz.it</a>.</p>
]]></content>
  </entry>
  
</feed>
